;; -----------------------------------------------------------------------------
;; Demo "Hello World" Web application
;; -----------------------------------------------------------------------------
;;

(load-module :tomcat ['tomcat :as 'tc])
(load-module :ring)


; ensure the Tomcat libs are on the classpath
(tc/check-required-libs)

(def tomcat-opts {:await? false, :base-dir ".", :port 8080})


(defn hello-world-handler [request]
  { :status 200
    :headers { "Content-Type" "text/html; charset=utf-8" }
    :body (ring/html-box-page "Demo" "Hello World") })

(defn test-handler [request]
  { :status 200
    :headers { "Content-Type" "text/html; charset=utf-8" }
    :body (ring/html-box-page "Demo" "Test") })

;; A route is defined by a HTTP verb, a URI filter and a handle
;; function.
;; If multiple routes match the route with the longest URI filter
;; will be chosen
(def routes [[:get "/**"       hello-world-handler]
             [:get "/test"     test-handler]
             [:get "/test/**"  test-handler]])

(defn my-servlet []
  (ring/create-servlet (-> (ring/match-routes routes)  ; >--+
                                                       ;    |
                           ;(ring/mw-dump-response)    ; ^  |
                           ;(ring/mw-dump-request)     ; |  |
                           (ring/mw-request-counter)   ; |  |
                           (ring/mw-add-session 3600)  ; |  |
                           (ring/mw-print-uri)         ; |  |
                           (ring/mw-debug :on))))      ; +--+

;; start Tomcat
(let [server (tc/start (my-servlet) tomcat-opts)]
  (defn stop [] (tc/shutdown server)))


(println "Tomcat started on port ~(:port tomcat-opts).")
(println "Open a browser:      (sh/open \"http://localhost:8080\")")
(println "Stop it by calling:  (stop)")
