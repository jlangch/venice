;;;;   __    __         _
;;;;   \ \  / /__ _ __ (_) ___ ___
;;;;    \ \/ / _ \ '_ \| |/ __/ _ \
;;;;     \  /  __/ | | | | (_|  __/
;;;;      \/ \___|_| |_|_|\___\___|
;;;;
;;;;
;;;; Copyright 2017-2024 Venice
;;;;
;;;; Licensed under the Apache License, Version 2.0 (the "License");
;;;; you may not use this file except in compliance with the License.
;;;; You may obtain a copy of the License at
;;;;
;;;;     http://www.apache.org/licenses/LICENSE-2.0
;;;;
;;;; Unless required by applicable law or agreed to in writing, software
;;;; distributed under the License is distributed on an "AS IS" BASIS,
;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;;;; See the License for the specific language governing permissions and
;;;; limitations under the License.

;;;; Fonts management


(ns fonts)


(def fonts-family-url "https://www.fontsquirrel.com/fonts/download/")

(def family-open-sans "open-sans")
(def family-roboto "roboto")
(def family-jetbrains-mono "jetbrains-mono")
(def family-source-code-pro "source-code-pro")

(defn
  ^{ :arglists '("(fonts/download-font-family family-name options*)")
     :doc
       """
       Downloads a font family from the
       [Font Squirrel](https://www.fontsquirrel.com/) repository

       Some useful font families:

       | Family          | Download family ref   | Type | License                     |
       | [![width: 20%]] | [![width: 20%]]       | [![width: 10%]]  | [![width: 50%]] |
       | Open Sans       | open-sans             | TTF  | Apache License v2           |
       | Roboto          | roboto                | TTF  | Apache License v2           |
       | Source Code Pro | source-code-pro       | OTF  | SIL Open Font License v1.10 |
       | JetBrains Mono  | jetbrains-mono        | TTF  | Apache License v2           |

 
       Options:

       | :extract {true,false} | if true extract the TTF files from the font \
                                 family ZIP, else just download the ZIP |
       | :dir path             | download dir, defaults to "." |
       | :silent {true,false}  | if silent is true does not print download \
                                 info, defaults to true |
       """
     :examples '(
       """
       (do
         (load-module :fonts)

         (fonts/download-font-family "open-sans"
                                     :dir (repl/libs-dir)
                                     :extract true
                                     :glob-pattern "*.ttf"
                                     :silent false)

         (fonts/download-font-family "jetbrains-mono"
                                     :dir (repl/libs-dir)
                                     :extract true
                                     :glob-pattern "*.ttf"
                                     :silent false)

         (fonts/download-font-family "roboto"
                                     :dir (repl/libs-dir)
                                     :extract true
                                     :glob-pattern "*.ttf"
                                     :silent false)

         (fonts/download-font-family "source-code-pro"
                                     :dir (repl/libs-dir)
                                     :extract true
                                     :glob-pattern "*.otf"
                                     :silent false))
       """)
     :see-also '(
       "fonts/download-demo-fonts") }

  download-font-family [family-name & options]

  (let [opts     (apply hash-map options)
        extract  (:extract opts false)
        silent   (:silent opts true)
        dir      (:dir opts ".")
        glob     (:glob-pattern opts "*.ttf")
        url      (str fonts-family-url (str/encode-url family-name))
        log      (fn [font]
                   (when-not silent (println " Extracting '~{font}'...")))]

    (when-not silent
      (println "Downloading '~{family-name}' font family..."))

    (let [zip (download-font-zip url family-name)]
      (if extract
        ;; extract the font files
        (try
          (as-> zip v
                (io/unzip-all glob v)
                (map-keys #(io/file-name (io/file %)) v)
                (doseq [[f data] v]
                  (log f) 
                  (io/spit (io/file dir f) data)))
          (catch :VncException e
            (throw (ex :VncException
                      "Failed to extract the font family ~{family-name}!"
                      e))))
        ;; save the font zip file
        (try
          (let [file (io/file dir (str name ".zip"))]
            (when-not silent
              (println "Saving '~{family-name}' to" file))
            (io/spit file zip))
          (catch :VncException e
            (throw (ex :VncException
                      "Failed to save the font family ~{family-name} zip!"
                      e))))))))


(defn 
  ^{ :arglists '(
       "(fonts/download-demo-fonts dir)"
       "(fonts/download-demo-fonts dir silent)")
     :doc
       """
       Downloads the Venice demo fonts
       
       | Family          | Download family ref   | Type | License                     |
       | [![width: 20%]] | [![width: 20%]]       | [![width: 10%]]  | [![width: 50%]] |
       | Open Sans       | open-sans             | TTF  | Apache License v2           |
       | Roboto          | roboto                | TTF  | Apache License v2           |
       | Source Code Pro | source-code-pro       | OTF  | SIL Open Font License v1.10 |
       | JetBrains Mono  | jetbrains-mono        | TTF  | Apache License v2           |

       to the specified dir.

       Downloads the font families from the
       [Font Squirrel](https://www.fontsquirrel.com/) repository
       """
     :examples '(
       """
       (do
         (load-module :fonts)
         (fonts/download-demo-fonts (repl/libs-dir) false))
       """)
     :see-also '(
       "fonts/download-font-family") }

  download-demo-fonts

  ([dir]
    (fonts/download-demo-fonts dir false))

  ([dir silent]
    (fonts/download-font-family "open-sans"
                                :dir dir
                                :extract true
                                :glob-pattern "*.ttf"
                                :silent silent)

    (fonts/download-font-family "jetbrains-mono"
                                :dir dir
                                :extract true
                                :glob-pattern "*.ttf"
                                :silent silent)

    (fonts/download-font-family "roboto"
                                :dir dir
                                :extract true
                                :glob-pattern "*.ttf"
                                :silent silent)
                                
    (fonts/download-font-family "source-code-pro"
                                :dir (repl/libs-dir)
                                :extract true
                                :glob-pattern "*.otf"
                                :silent false)))


(defn- download-font-zip [url family-name]
  (try
    (io/download url :binary true :user-agent "Mozilla")
    (catch :VncException e
      (throw (ex :VncException
                """
                Failed to download and the font family \
                ~{family-name}!
                """
                e)))))