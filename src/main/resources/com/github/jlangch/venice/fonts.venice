;;;;   __    __         _
;;;;   \ \  / /__ _ __ (_) ___ ___
;;;;    \ \/ / _ \ '_ \| |/ __/ _ \
;;;;     \  /  __/ | | | | (_|  __/
;;;;      \/ \___|_| |_|_|\___\___|
;;;;
;;;;
;;;; Copyright 2017-2022 Venice
;;;;
;;;; Licensed under the Apache License, Version 2.0 (the "License");
;;;; you may not use this file except in compliance with the License.
;;;; You may obtain a copy of the License at
;;;;
;;;;     http://www.apache.org/licenses/LICENSE-2.0
;;;;
;;;; Unless required by applicable law or agreed to in writing, software
;;;; distributed under the License is distributed on an "AS IS" BASIS,
;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;;;; See the License for the specific language governing permissions and
;;;; limitations under the License.

;;;; Fonts management


(ns fonts)


(def fonts-family-url "https://fonts.google.com/download?family=")


(defn
  ^{ :arglists '("(download-font-family family-name options*)")
     :doc
       """
       Download a font family from the
       [Google fonts](https://fonts.google.com/) repository

       Some useful font families with name and true type font files
       globbing pattern to extract the files from the family zip file:

       | Family            | TTF glob pattern        |
       | :---------------- | :---------------------- |
       | "Open Sans"       | "static/OpenSans/*.ttf" |
       | "Source Code Pro" | "static/*.ttf"          |
       | "Audiowide"       | "*.ttf"                 |
       | "Roboto"          | "*.ttf"                 |

       Options:

       | :extract {true,false} | if true extract the TTF files from the font family ZIP, else just download the ZIP |
       | :glob-pattern {pat}   | an optional glob pattern to select the TTF files to be extracted. E.g.: "*.ttf" |
       | :dir path             | download dir, defaults to "." |
       | :silent {true,false}  | if silent is true does not print download info, defaults to true |
       """
     :examples '(
       """
       (do
         (load-module :fonts)

         (fonts/download-font-family "Open Sans"
                                     :dir (repl/fonts-dir)
                                     :extract true
                                     :glob-pattern "static/OpenSans/*.ttf"
                                     :silent false)

         (fonts/download-font-family "Source Code Pro"
                                     :dir (repl/fonts-dir)
                                     :extract true
                                     :glob-pattern "static/*.ttf"
                                     :silent false)

         (fonts/download-font-family "Roboto"
                                     :dir (repl/fonts-dir)
                                     :extract true
                                     :glob-pattern "*.ttf"
                                     :silent false))
       """) }

  download-font-family [family-name & options]

  (let [opts     (apply hash-map options)
        extract  (:extract opts false)
        silent   (:silent opts true)
        dir      (:dir opts ".")
        glob     (:glob-pattern opts "*.ttf")
        url      (str fonts-family-url (str/encode-url family-name))
        log      (fn [font]
                   (when-not silent (println " Extracting '~{font}'...")))]

    (when-not silent
      (println "Downloading '~{family-name}' font family..."))

    (if extract
      (try
        (->> (io/download url :binary true :user-agent "Mozilla")
             (io/unzip-all glob)
             (map-keys #(io/file-name (io/file %)))
             (docoll (fn [[k v]] (log k) (io/spit (io/file dir k) v))))
        (catch :VncException e
          (throw (ex :VncException
                     """
                     Failed to download and extract the font family \
                     ~{family-name}!
                     """
                     e))))
      (try
        (let [file (io/file dir (str name ".zip"))]
          (->> (io/download url :binary true :user-agent "Mozilla")
               (io/spit file)))
        (catch :VncException e
          (throw (ex :VncException
                     "Failed to download the font family ~{family-name} zip!"
                     e)))))))
