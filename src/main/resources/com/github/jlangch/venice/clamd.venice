;;;;   __    __         _
;;;;   \ \  / /__ _ __ (_) ___ ___
;;;;    \ \/ / _ \ '_ \| |/ __/ _ \
;;;;     \  /  __/ | | | | (_|  __/
;;;;      \/ \___|_| |_|_|\___\___|
;;;;
;;;;
;;;; Copyright 2017-2025 Venice
;;;;
;;;; Licensed under the Apache License, Version 2.0 (the "License");
;;;; you may not use this file except in compliance with the License.
;;;; You may obtain a copy of the License at
;;;;
;;;;     http://www.apache.org/licenses/LICENSE-2.0
;;;;
;;;; Unless required by applicable law or agreed to in writing, software
;;;; distributed under the License is distributed on an "AS IS" BASIS,
;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;;;; See the License for the specific language governing permissions and
;;;; limitations under the License.

;;;; Clam AV: clamd daemon management


(ns clamd)


(defn 
  ^{ :arglists '(
         "(running?)")
     :doc """
          Returns true if the clamd daemon is running else false.
          """
     :examples '(
          """
          (do
            (load-module :clamd)
            (clamd/running?))
          """)
     :see-also '() }

  running? []

  (sh/alive? (clamd/pid)))


(defn 
  ^{ :arglists '(
         "(pid)")
     :doc """
          Returns the PID of the running clamd daemon or `nil` if not runnning.
          """
     :examples '(
          """
          (do
            (load-module :clamd)
            (clamd/pid))
          """)
     :see-also '() }

  pid []

  (first (sh/pgrep "clamd")))


(defn 
  ^{ :arglists '(
         "(cpu-limit-set limit)")
     :doc """
          Sets the CPU limit of the running `clamd` daemon. The 'limit' is value
          int the range of 1 to 100%.
          
          Throws an exception if the daemon is not running.
          """
     :examples '(
          """
          (do
            (load-module :clamd)
            (clamd/cpu-limit-set 50))
          """)
     :see-also '() }

  cpu-limit-set [limit]

  { :pre [(long? limit) (<= 1 limit 100)] }

  ;; cpulimit -p "$CLAMD_PID" -l 30 &
  nil )


(defn 
  ^{ :arglists '(
         "(cpu-limit-get)")
     :doc """
          Gets the CPU limit of the running `clamd` daemon. 
          
          Throws an exception if the daemon is not running.
          """
     :examples '(
          """
          (do
            (load-module :clamd)
            (clamd/cpu-limit-get))
          """)
     :see-also '() }

  cpu-limit-get []

  (when-not (clamd/pid)
    (throw (ex :VncException "clamd daemon is not running!")))

  (let [cpu-limit-pids (sh/pgrep "cpulimit")]
      ))

(defn- cpulimit-on-clamd? [pid]
  (let [a (sh/pargs pid)]
    (contains? a " /usr/bin/clamd ")))


