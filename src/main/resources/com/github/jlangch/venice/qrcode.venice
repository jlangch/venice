;;;;   __    __         _
;;;;   \ \  / /__ _ __ (_) ___ ___
;;;;    \ \/ / _ \ '_ \| |/ __/ _ \
;;;;     \  /  __/ | | | | (_|  __/
;;;;      \/ \___|_| |_|_|\___\___|
;;;;
;;;;
;;;; Copyright 2017-2024 Venice
;;;;
;;;; Licensed under the Apache License, Version 2.0 (the "License");
;;;; you may not use this file except in compliance with the License.
;;;; You may obtain a copy of the License at
;;;;
;;;;     http://www.apache.org/licenses/LICENSE-2.0
;;;;
;;;; Unless required by applicable law or agreed to in writing, software
;;;; distributed under the License is distributed on an "AS IS" BASIS,
;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;;;; See the License for the specific language governing permissions and
;;;; limitations under the License.

;;;; Venice QR Code functions

;;;; Install QR Code 3rd party libraries:
;;;;
;;;;   (load-module :qrcode-install)
;;;;   (qrcode-install/install :dir (repl/libs-dir) :silent false)


(ns qrcode)

(import :import com.google.zxing.BinaryBitmap)
(import :import com.google.zxing.NotFoundException)
(import :import com.google.zxing.MultiFormatReader)
(import :import com.google.zxing.client.j2se.BufferedImageLuminanceSource)
(import :import com.google.zxing.common.HybridBinarizer)
(import :import javax.imageio.ImageIO)
(import :import java.awt.image.BufferedImage)


(defn decode [img-file]
  (let [buffered-img (. :ImageIO :read img-file)
        source       (. :BufferedImageLuminanceSource :new buffered-img)
        binarizer    (. :HybridBinarizer :new source)
        bitmap       (. :BinaryBitmap :new binarizer)
        reader       (. :MultiFormatReader :new)
        result       (. reader :decode bitmap)]
    (. result :getText)))


