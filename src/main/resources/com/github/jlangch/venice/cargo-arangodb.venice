;;;;   __    __         _
;;;;   \ \  / /__ _ __ (_) ___ ___
;;;;    \ \/ / _ \ '_ \| |/ __/ _ \
;;;;     \  /  __/ | | | | (_|  __/
;;;;      \/ \___|_| |_|_|\___\___|
;;;;
;;;;
;;;; Copyright 2017-2023 Venice
;;;;
;;;; Licensed under the Apache License, Version 2.0 (the "License");
;;;; you may not use this file except in compliance with the License.
;;;; You may obtain a copy of the License at
;;;;
;;;;     http://www.apache.org/licenses/LICENSE-2.0
;;;;
;;;; Unless required by applicable law or agreed to in writing, software
;;;; distributed under the License is distributed on an "AS IS" BASIS,
;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;;;; See the License for the specific language governing permissions and
;;;; limitations under the License.

;;;; Docker ArangoDB cargo testcontainer

;;;; This is just a configuration wrapper on top of the :cargo module to
;;;; simplify using ArangoDB testcontainers

(ns cargo-arangodb)

(load-module :docker)
(load-module :cargo)

(defonce internal-port 8529) ;; The ArangoDB internal port within the container


(defn
  ^{ :arglists '(
          "(cargo-arangodb/start cname version mapped-port root-passwd memory cores log)")
     :doc """
          Starts an ArangoDB container.

          Start rules:

            * If a container with another version exists for the container
              name remove the container and the image
            * Pull the image if not yet locally available
            * If the container already runs - use it
            * If the container is available but does not run - start it `(docker/start ...)`
            * If the container is not available - run it `(docker/run ...)`
            * Finally check for a successful startup. The container log must
              contain the string ".*is ready for business. Have fun.*" on the
              last line.

          Args:

          | [![width: 15%]] | [![width: 85%]] |
          | cname       | A unique container name |
          | version     | The ArangoDB version to use. E.g.: 3.11.4 |
          | mapped-port | The published (mapped) ArangoDB port on the host |
          | root-passwd | The ArangoDB root password |
          | memory      | The detected memory ArangoDB is to use. E.g.: 8GB, 8000MB |
          | cores       | The detected number of cores ArangoDB is to use |
          | log         | A log function  (may be *nil*)|
          """
     :examples '(
          """
          ;; Run an ArangoDB container
          (cargo-arangodb/start "arangodb-test"
                                "3.11.4"
                                8500
                                "test"
                                "8GB"
                                1
                                (fn [s] (println "ArangoDB:" s)))
          """)
     :see-also '(
          "cargo-arangodb/stop") }

  start [cname version mapped-port root-passwd memory cores log]

  { :pre [(string? cname)
          (string? version)
          (or (int? mapped-port) (long? mapped-port))
          (< 0 mapped-port 65536)
          (string? root-passwd)
          (string? memory)
          (match? (str/upper-case memory) "[1-9][0-9]*(B|K|M|G|T|KB|MB|GB|TB|KIB|MIB|GIB|TIB)")
          (or (int? cores) (long? cores))
          (< 0 cores 64)] }

  (let [host-port (long mapped-port)
        envs      ["ARANGO_ROOT_PASSWORD=~{root-passwd}"
                   "ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY=~{memory}"
                   "ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES=~(long cores)"]
        args-old  ["--server.endpoint tcp://0.0.0.0:~{internal-port}" ]
        args-new  ["--server.endpoint tcp://0.0.0.0:~{internal-port}"
                   "--server.telemetrics-api false"]
        args      (if (match? version "3[.](9|10)[.].*") args-old args-new)
        log       (or log default-log)
        publish   "~{host-port}:~{internal-port}"
        wait-after-start-secs 3
        ready-check-max-secs  30]
    (log "ArangoDB: Starting ~{version} as \"~{cname}\" @ port ~{publish} ...")
    (cargo/start cname "arangodb/arangodb" version publish
                 envs args
                 arangodb-ready?
                 log
                 wait-after-start-secs
                 ready-check-max-secs)))


(defn
  ^{ :arglists '("(cargo-arangodb/stop cname log)")
     :doc """
          Stops an ArangoDB container

          Args:

          | cname   | A unique container name     |
          | log     | A log function (may be *nil*) |
          """
     :examples '(
          """
          (cargo-arangodb/stop "arangodb-test"
                               (fn [s] (println "ArangoDB:" s)))
          """)
     :see-also '(
          "cargo-arangodb/start") }

  stop [cname log]

  { :pre [(string? cname)] }

  (let [log (or log default-log)]
    (cargo/stop cname log)))


;; ---------------------------------------------------------------------------
;; utils
;; ---------------------------------------------------------------------------

(defn default-log [s]
  (println "ArangoDB:" s))

(defn arangodb-ready? [cname]
  (-> (last-log-line cname)
      (match? #".*is ready for business. Have fun.*")))

(defn last-log-line [cname]
  (->> (docker/container-logs cname :tail 5)
       (str/split-lines)
       (last)))

(defn admin-url [port]
  "http://127.0.0.1:~(long port)")
