;;;;   __    __         _
;;;;   \ \  / /__ _ __ (_) ___ ___
;;;;    \ \/ / _ \ '_ \| |/ __/ _ \
;;;;     \  /  __/ | | | | (_|  __/
;;;;      \/ \___|_| |_|_|\___\___|
;;;;
;;;;
;;;; Copyright 2017-2023 Venice
;;;;
;;;; Licensed under the Apache License, Version 2.0 (the "License");
;;;; you may not use this file except in compliance with the License.
;;;; You may obtain a copy of the License at
;;;;
;;;;     http://www.apache.org/licenses/LICENSE-2.0
;;;;
;;;; Unless required by applicable law or agreed to in writing, software
;;;; distributed under the License is distributed on an "AS IS" BASIS,
;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;;;; See the License for the specific language governing permissions and
;;;; limitations under the License.

;;;; Docker arangodb testcontainer

(ns cargo-arangodb)

(load-module :docker)
(load-module :cargo)


;; start ArangoDB
(defn start [cname version mapped-port root-passwd memory cores]
  { :pre [(string? cname)
          (string? version)
          (or (int? mapped-port) (long? mapped-port))
          (pos? mapped-port)
          (string? root-passwd)
          (string? memory)
          (or (int? cores) (long? cores))] }

  (let [envs ["ARANGO_ROOT_PASSWORD=~{root-passwd}"
              "ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY=~{memory}"
              "ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES=~(long cores)"]
        args ["--server.endpoint tcp://0.0.0.0:8259"]]
    (cargo/start cname version mapped-port envs args arangodb-ready? log)))


;; stop ArangoDB
(defn stop [cname]
  { :pre [(string? cname)] }

  (cargo/stop cname log))


;; ---------------------------------------------------------------------------
;; utils
;; ---------------------------------------------------------------------------

(defn log [s]
  (println "ArangoDB: " s))

(defn arangodb-ready? [cname]
  (-> (last-log-line cname)
      (match? #".*is ready for business. Have fun.*")))

(defn last-log-line [cname]
  (->> (docker/container-logs cname :tail 5)
       (str/split-lines)
       (last)))

(defn admin-url [port]
  "http://127.0.0.1:~(long port)")
