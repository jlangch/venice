;;;;   __    __         _
;;;;   \ \  / /__ _ __ (_) ___ ___
;;;;    \ \/ / _ \ '_ \| |/ __/ _ \
;;;;     \  /  __/ | | | | (_|  __/
;;;;      \/ \___|_| |_|_|\___\___|
;;;;
;;;;
;;;; Copyright 2017-2025 Venice
;;;;
;;;; Licensed under the Apache License, Version 2.0 (the "License");
;;;; you may not use this file except in compliance with the License.
;;;; You may obtain a copy of the License at
;;;;
;;;;     http://www.apache.org/licenses/LICENSE-2.0
;;;;
;;;; Unless required by applicable law or agreed to in writing, software
;;;; distributed under the License is distributed on an "AS IS" BASIS,
;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;;;; See the License for the specific language governing permissions and
;;;; limitations under the License.

;;;; A super simple logger

(ns logger)


(defn handler 
  ([file] { :file file, :max-size -1 })
  ([file max-size] { :file file, :max-size max-size }))


(defn log 
  ([handler level principal msg]
    (log handler level principal msg nil))

  ([handler level principal msg exc]
    (locking mutex
      (let [f (:file handler)
            m (:max-size handler -1)]
        (io/spit f (format-msg level principal msg exc) :append true)
        (when (pos? m)
          (io/truncate-from-start-keep-lines f m))))))


(defn rotate-log-file-by-day [file archive-dir]
  (when (not (io/exists-dir? archive-dir))
    (throw (ex :VncException 
               "Log rotation failed. The archive dir ~{archive-dir} does not exist!")))
  (locking mutex
    (let [prev-day (time/minus (time/local-date))
          year     (time/year prev-day)
          month    (time/month prev-day)
          day      (time/day-of-month prev-day)
          archive  (io/file archive-dir
                     (str/format "%s-%d-%02d-%02d.log" 
                                 (io/file-basename file) year month day))]
      (when (io/exists-file? file)
        (io/move-file file archive)))))


(defn rotate-log-file-by-month [file archive-dir]
  (when (not (io/exists-dir? archive-dir))
    (throw (ex :VncException 
               "Log rotation failed. The archive dir ~{archive-dir} does not exist!")))
  (locking mutex
    (let [prev-day (time/minus (time/local-date) :days 1)
          year     (time/year prev-day)
          month    (time/month prev-day)
          archive  (io/file archive-dir
                     (str/format "%s-%d-%02d.log" 
                                 (io/file-basename file) year month))]
      (when (io/exists-file? file)
        (io/move-file file archive)))))
 

(defn- format-msg [level principal msg exc]
  (str/format "%s|%s|%s|%s%n"
              (format-timestamp (time/local-date-time)) 
              (str/upper-case (name level)) 
              (if (keyword? principal) (name principal) (str principal))
              (cond
                (nil? exc)       msg
                (ex-venice? exc) "~{msg}\n~(ex-venice-stacktrace exc)"
                :else            "~{msg}\n~(ex-java-stacktrace exc)")))


(defn- format-timestamp [ts]
  (time/format ts "yyyy-MM-dd HH:mm:ss.SSS"))


(def- mutex nil)