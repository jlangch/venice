;;;;   __    __         _
;;;;   \ \  / /__ _ __ (_) ___ ___
;;;;    \ \/ / _ \ '_ \| |/ __/ _ \
;;;;     \  /  __/ | | | | (_|  __/
;;;;      \/ \___|_| |_|_|\___\___|
;;;;
;;;;
;;;; Copyright 2017-2025 Venice
;;;;
;;;; Licensed under the Apache License, Version 2.0 (the "License");
;;;; you may not use this file except in compliance with the License.
;;;; You may obtain a copy of the License at
;;;;
;;;;     http://www.apache.org/licenses/LICENSE-2.0
;;;;
;;;; Unless required by applicable law or agreed to in writing, software
;;;; distributed under the License is distributed on an "AS IS" BASIS,
;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;;;; See the License for the specific language governing permissions and
;;;; limitations under the License.

;;;; A simple logger

(ns logger)


(defn log 
  ([file level principal msg]
    (locking mutex
      (io/spit file
              (str/format "%s|%s|%s|%s%n"
                          (format-timestamp (time/local-date-time)) 
                          (str/upper-case (name level)) 
                          principal
                          msg)
              :append true)))

  ([file level principal msg ex]
    (locking mutex
      (io/spit file
              (str/format "%s|%s|%s|%s%n"
                          (format-timestamp (time/local-date-time)) 
                          (str/upper-case (name level)) 
                          principal
                          (cond
                            (nil? ex)       msg
                            (ex-venice? ex) "~{msg}\n~(ex-venice-stacktrace ex)"
                            :else           "~{msg}\n~(ex-java-stacktrace ex)"))
              :append true))))


(defn rotate-log-file-by-day [file archive-dir]
  (when (not (io/exists-dir? archive-dir))
    (throw (ex :VncException 
               "Log rotation failed. The archive dir ~{archive-dir} does not exist!")))
  (locking mutex
    (let [prev-day (time/minus (time/local-date) :days 1)
          year     (time/year prev-day)
          month    (time/month prev-day)
          archive  (io/file archive-dir
                    (str/format "%s-%d-%02d-%02d.log" 
                                (io/file-basename file) year month day))]
      (when (io/exists-file? file)
        (io/move-file file archive)))))


(defn rotate-log-file-by-month [file archive-dir]
  (when (not (io/exists-dir? archive-dir))
    (throw (ex :VncException 
               "Log rotation failed. The archive dir ~{archive-dir} does not exist!")))
  (locking mutex
    (let [prev-day (time/minus (time/local-date) :days 1)
          year     (time/year prev-day)
          month    (time/month prev-day)
          archive  (io/file archive-dir
                    (str/format "%s-%d-%02d.log" 
                                (io/file-basename file) year month))]
      (when (io/exists-file? file)
        (io/move-file file archive)))))


(def- mutex nil)