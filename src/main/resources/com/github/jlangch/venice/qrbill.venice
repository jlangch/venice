;;;;   __    __         _
;;;;   \ \  / /__ _ __ (_) ___ ___
;;;;    \ \/ / _ \ '_ \| |/ __/ _ \
;;;;     \  /  __/ | | | | (_|  __/
;;;;      \/ \___|_| |_|_|\___\___|
;;;;
;;;;
;;;; Copyright 2017-2023 Venice
;;;;
;;;; Licensed under the Apache License, Version 2.0 (the "License");
;;;; you may not use this file except in compliance with the License.
;;;; You may obtain a copy of the License at
;;;;
;;;;     http://www.apache.org/licenses/LICENSE-2.0
;;;;
;;;; Unless required by applicable law or agreed to in writing, software
;;;; distributed under the License is distributed on an "AS IS" BASIS,
;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;;;; See the License for the specific language governing permissions and
;;;; limitations under the License.

;;;; Venice QR Bill functions

;;;; Install QR Bill party libraries:
;;;;
;;;;   (load-module :qrbill-install)
;;;;   (qrbill-install/install :dir (repl/libs-dir) :silent false)


(ns qrbill)

(import :net.codecrete.qrbill.canvas.PDFCanvas)
(import :net.codecrete.qrbill.generator.Address)
(import :net.codecrete.qrbill.generator.Bill)
(import :net.codecrete.qrbill.generator.Language)
(import :net.codecrete.qrbill.generator.OutputSize)
(import :net.codecrete.qrbill.generator.QRBill)
(import :net.codecrete.qrbill.generator.SeparatorType)


(def page-last -1I)
(def page-new-at-end -2I)

(defn
  ^{ :arglists '("(address name line line2)")
     :doc "QR bill address for debtor/creditor"
     :examples '("""(qrbill/address "Peter Meier" "Bahnhofstrasse 2" "8000 ZÃ¼rich")""") }

  address [name line line2]

  (doto (. :Address :new)
        (. :setName name)
        (. :setAddressLine1 line1)
        (. :setAddressLine2 line2)))


(defn
  ^{ :arglists '("(bill account amount qr-ref msg debtor creditor)")
     :doc "Create a bill"
     :examples '(
       """
       (do
         (load-module :qrbill)
         (qrbill/bill "CH00 3000 2000 1000 0000 0"
                      300.00M
                      "000004"
                      "Testrechnung"
                      (qrbill/address "Peter Meier"
                                      "Bahnhofstrasse 2"
                                      "8000 Wil")
                      (qrbill/address "Travag GmbH"
                                      "Bahnhofstrasse 3"
                                      "8000 Wil")))
       """) }

  bill [account amount qr-ref msg debtor creditor]
  (let [b (. :Bill :new)]
    (doto (. b :getFormat)
          (. :setLanguage :DE)
          (. :setLanguage :A4_PORTRAIT_SHEET)
          (. :setSeparatorType :DASHED_LINE_WITH_SCISSORS))  ; :DASHED_LINE  :NONE
    (. b :setAccount account)
    (. b :setAmount amount)
    (. b :setCurrency "CHF")
    (. b :createAndSetQRReference qr-ref)
    (. b :setUnstructuredMessage msg)
    (. b :setCreditor creditor)
    (. b :setDebtor debtor)))


(defn
  ^{ :arglists '("(write invoice-raw-pdf-file bill invoice-file page-no)")
     :doc "Write the bill to a file"
     :examples '(
       """
       (do
         (load-module :qrbill)
         (let [debtor    (qrbill/address "Peter Meier"
                                         "Bahnhofstrasse 2"
                                         "8000 Wil")
               creditor  (qrbill/address "Travag GmbH"
                                         "Bahnhofstrasse 3"
                                         "8000 Wil")
               bill      (qrbill/bill "CH00 3000 2000 1000 0000 0"
                                      300.00M
                                      "000004"
                                      "Testrechnung"
                                      debtor
                                      creditor)]
           (qrbill/write "./PeterMeier-Rechnung-004.pdf"
                         bill
                         "./PeterMeier-Rechnung-004-Invoice.pdf"
                         qrbill/page-new-at-end)))
       """) }

  write [invoice-raw-pdf-file bill invoice-file page-no]

  (try-with [canvas (. :PDFCanvas :new (. invoice-raw-pdf-file :toPath) page-no)]
    (. :QRBill :draw bill canvas)
    (. canvas :saveAs (. invoice-file :toPath))
    (println "Bill saved at " invoice-file)))
