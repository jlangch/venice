;;;;   __    __         _
;;;;   \ \  / /__ _ __ (_) ___ ___
;;;;    \ \/ / _ \ '_ \| |/ __/ _ \
;;;;     \  /  __/ | | | | (_|  __/
;;;;      \/ \___|_| |_|_|\___\___|
;;;;
;;;;
;;;; Copyright 2017-2024 Venice
;;;;
;;;; Licensed under the Apache License, Version 2.0 (the "License");
;;;; you may not use this file except in compliance with the License.
;;;; You may obtain a copy of the License at
;;;;
;;;;     http://www.apache.org/licenses/LICENSE-2.0
;;;;
;;;; Unless required by applicable law or agreed to in writing, software
;;;; distributed under the License is distributed on an "AS IS" BASIS,
;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;;;; See the License for the specific language governing permissions and
;;;; limitations under the License.

;;;; Utilities for accessing text on the system clipboard


(ns clipboard)

(import :java.awt.datatransfer.Clipboard)
(import :java.awt.datatransfer.DataFlavor)
(import :java.awt.datatransfer.StringSelection)
(import :java.awt.Toolkit)


(defn- clipboard
  ;; Returns the current clipboard.
  []
  (-> (. :Toolkit :getDefaultToolkit)
      (. :getSystemClipboard)))


(defn
  ^{ :arglists '("(clipboard/get-content)")
     :doc """
          Copies the current contents of the Clipboard, returning its contents
          as a string.
          """
     :examples '(
           """
           (do
             (load-module :clipboard)
             (clipboard/get-content))
           """)
      :see-also '(
           "clipboard/set-content") }

  get-content []

  (-> (clipboard)
      (. :getContents nil)
      (. :getTransferData (. :DataFlavor :stringFlavor))))


(defn
  ^{ :arglists '("(clipboard/set-content)")
     :doc "Pastes a string in as the new content of the Clipboard"
     :examples '(
           """
           (do
             (load-module :clipboard)
             (clipboard/set-content "Hello"))
           """)
      :see-also '(
           "clipboard/get-content") }


  set-content [s]

  (-> (clipboard)
      (. :setContents (. :StringSelection :new s) nil)))
