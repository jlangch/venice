;;;;   __    __         _
;;;;   \ \  / /__ _ __ (_) ___ ___
;;;;    \ \/ / _ \ '_ \| |/ __/ _ \
;;;;     \  /  __/ | | | | (_|  __/
;;;;      \/ \___|_| |_|_|\___\___|
;;;;
;;;;
;;;; Copyright 2017-2023 Venice
;;;;
;;;; Licensed under the Apache License, Version 2.0 (the "License");
;;;; you may not use this file except in compliance with the License.
;;;; You may obtain a copy of the License at
;;;;
;;;;     http://www.apache.org/licenses/LICENSE-2.0
;;;;
;;;; Unless required by applicable law or agreed to in writing, software
;;;; distributed under the License is distributed on an "AS IS" BASIS,
;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;;;; See the License for the specific language governing permissions and
;;;; limitations under the License.

;;;; DOCKER unit test


(do
  (load-module :zipvault)
  (load-module :test)

  (ns zipvault-test)


  (test/deftest test-zip []
    (let [file (io/temp-file "vault-", ".zip")]
      (io/delete-file-on-exit file)
      (zipvault/zip file "123" "a.txt" "abc" "b.txt" "def")

      (let [data (-> (zipvault/extract-file-data file "123" "a.txt")
                     (bytebuf-to-string))]
        (assert-eq "abc" data))))

  (test/deftest test-encryptedQ []
    (let [file (io/temp-file "vault-", ".zip")]
      (io/delete-file-on-exit file)
      (zipvault/zip file "123" "a.txt" "abc" "b.txt" "def")
      
      (assert-eq true (zipvault/encrypted? file))))

  (test/deftest test-valid-zip-fileQ []
    (let [file (io/temp-file "vault-", ".zip")]
      (io/delete-file-on-exit file)
      (zipvault/zip file "123" "a.txt" "abc" "b.txt" "def")
      
      (assert-eq true (zipvault/valid-zip-file? file))))


  ;; run tests
  (test/run-tests 'zipvault-test))
