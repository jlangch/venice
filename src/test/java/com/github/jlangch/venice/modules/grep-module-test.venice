;;;;   __    __         _
;;;;   \ \  / /__ _ __ (_) ___ ___
;;;;    \ \/ / _ \ '_ \| |/ __/ _ \
;;;;     \  /  __/ | | | | (_|  __/
;;;;      \/ \___|_| |_|_|\___\___|
;;;;
;;;;
;;;; Copyright 2017-2025 Venice
;;;;
;;;; Licensed under the Apache License, Version 2.0 (the "License");
;;;; you may not use this file except in compliance with the License.
;;;; You may obtain a copy of the License at
;;;;
;;;;     http://www.apache.org/licenses/LICENSE-2.0
;;;;
;;;; Unless required by applicable law or agreed to in writing, software
;;;; distributed under the License is distributed on an "AS IS" BASIS,
;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;;;; See the License for the specific language governing permissions and
;;;; limitations under the License.

;;;; GREP unit test


(do
  (load-module :grep)
  (load-module :test)

  (ns grep-test)


  (def content1
        """
        line 1  BBB
        line 2  AAA
        line 3  BBB
        line 4  BBB
        line 5  BBB
        line 6  BBB
        line 7  BBB
        line 8  AAA
        """)

  (def content2
        """
        line 1  BBB
        line 2  BBB
        line 3  BBB
        line 4  BBB
        line 5  BBB
        line 6  BBB
        line 7  BBB
        line 8  AAA
        """)

 (def content3
        """
        line 1  BBB
        line 2  BBB
        line 3  BBB
        line 4  BBB
        line 5  BBB
        line 6  BBB
        line 7  BBB
        line 8  BBB
        """)

  (defn lines [s]
    (io/slurp-lines (io/string-in-stream s)))

  (def dir (io/temp-dir "grep-"))
  (def f1  (io/file dir "step.log"))
  (def f2  (io/file dir "step.log.2022-04-01"))
  (def f3  (io/file dir "step.log.2022-05-01"))
  (def f4  (io/file dir "step.log.2022-06-01"))
  (def zip (io/file dir "step.2022-05.zip"))

  (io/spit f1 content1)
  (io/spit f2 content1)
  (io/spit f3 content2)
  (io/spit f4 content3)
  (io/zip-file zip f2 f3 f4)

  (io/delete-file-on-exit dir)
  (io/delete-file-on-exit f1)
  (io/delete-file-on-exit f2)
  (io/delete-file-on-exit f3)
  (io/delete-file-on-exit f4)
  (io/delete-file-on-exit zip)



  ;; ===========================================================================
  ;; grep
  ;; ===========================================================================

  (test/deftest test-grep []
    ;; grep machine readable ---------------------------------------------------
    (let [r1 (grep/grep dir "step.log.*" ".*AAA.*" :print false)]
      (assert-eq 3 (count r1))
      (assert-eq "step.log.2022-04-01::2::line 2  AAA" (str/join "::" (first r1)))
      (assert-eq "step.log.2022-04-01::8::line 8  AAA" (str/join "::" (second r1)))
      (assert-eq "step.log.2022-05-01::8::line 8  AAA" (str/join "::" (third r1))))

    ;; grep machine readable (no matching files) -------------------------------
    (let [r1 (grep/grep dir "---step.log.*" ".*AAA.*" :print false)]
      (assert-eq 0 (count r1)))

    ;; grep machine readable (no matching lines) -------------------------------
    (let [r1 (grep/grep dir "step.log.*" ".*ZZZ.*" :print false)]
      (assert-eq 0 (count r1)))

    ;; grep human readable -----------------------------------------------------
    (let [r1 (lines (with-out-str (grep/grep dir
                                            "step.log.*"
                                            ".*AAA.*"
                                            :print true)))]
      (assert-eq "step.log.2022-04-01:2:line 2  AAA" (first r1))
      (assert-eq "step.log.2022-04-01:8:line 8  AAA" (second r1))
      (assert-eq "step.log.2022-05-01:8:line 8  AAA" (third r1)))

    ;; grep human readable (no matching files) ---------------------------------
    (let [r1 (lines (with-out-str (grep/grep dir
                                            "---step.log.*"
                                            ".*AAA.*"
                                            :print true)))]
      (assert-eq 0 (count r1)))

    ;; grep human readable (no matching lines) ---------------------------------
    (let [r1 (lines (with-out-str (grep/grep dir
                                            "step.log.*"
                                            ".*ZZZ.*"
                                            :print true)))]
      (assert-eq 0 (count r1))))



  ;; ===========================================================================
  ;; grep-zip
  ;; ===========================================================================

  (test/deftest test-grep-zip []
    ;; grep-zip machine readable -----------------------------------------------
    (let [r1 (grep/grep-zip dir
                           "step.*.zip"
                           "step.log.*"
                           ".*AAA.*"
                           :print false)]
      (assert-eq 3 (count r1))
      (assert-eq "step.2022-05.zip::step.log.2022-04-01::2::line 2  AAA" (str/join "::" (first r1)))
      (assert-eq "step.2022-05.zip::step.log.2022-04-01::8::line 8  AAA" (str/join "::" (second r1)))
      (assert-eq "step.2022-05.zip::step.log.2022-05-01::8::line 8  AAA" (str/join "::" (third r1))))

    ;; grep-zip machine readable (no matching zip) -----------------------------
    (let [r1 (grep/grep-zip dir
                           "---step.*.zip"
                           "step.log.*"
                           ".*AAA.*"
                           :print false)]
      (assert-eq 0 (count r1)))

    ;; grep-zip machine readable (no matching files) ---------------------------
    (let [r1 (grep/grep-zip dir
                           "step.*.zip"
                           "---step.log.*"
                           ".*AAA.*"
                           :print false)]
      (assert-eq 0 (count r1)))

    ;; grep-zip machine readable (no matching lines) ---------------------------
    (let [r1 (grep/grep-zip dir
                           "step.*.zip"
                           "step.log.*"
                           ".*ZZZ.*"
                           :print false)]
      (assert-eq 0 (count r1)))

    ;; grep-zip human readable -------------------------------------------------
    (let [r1 (lines (with-out-str (grep/grep-zip dir
                                                "step.*.zip"
                                                "step.log.*"
                                                ".*AAA.*"
                                                :print true)))]
      (assert-eq 3 (count r1))
      (assert-eq "step.2022-05.zip!step.log.2022-04-01:2:line 2  AAA" (first r1))
      (assert-eq "step.2022-05.zip!step.log.2022-04-01:8:line 8  AAA" (second r1))
      (assert-eq "step.2022-05.zip!step.log.2022-05-01:8:line 8  AAA" (third r1)))

    ;; grep-zip machine readable (no matching zip) -----------------------------
    (let [r1 (lines (with-out-str (grep/grep-zip dir
                                                "---step.*.zip"
                                                "step.log.*"
                                                ".*AAA.*"
                                                :print true)))]
      (assert-eq 0 (count r1)))

    ;; grep-zip machine readable (no matching files) ---------------------------
    (let [r1 (lines (with-out-str (grep/grep-zip dir
                                                "step.*.zip"
                                                "---step.log.*"
                                                ".*AAA.*"
                                                :print true)))]
      (assert-eq 0 (count r1)))

    ;; grep-zip machine readable (no matching lines) ---------------------------
    (let [r1 (lines (with-out-str (grep/grep-zip dir
                                                "step.*.zip"
                                                "step.log.*"
                                                ".*ZZZ.*"
                                                :print true)))]
      (assert-eq 0 (count r1))))


  ;; run tests
  (test/run-tests 'grep-test))
