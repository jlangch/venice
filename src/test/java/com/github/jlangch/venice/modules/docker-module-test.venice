;;;;   __    __         _
;;;;   \ \  / /__ _ __ (_) ___ ___
;;;;    \ \/ / _ \ '_ \| |/ __/ _ \
;;;;     \  /  __/ | | | | (_|  __/
;;;;      \/ \___|_| |_|_|\___\___|
;;;;
;;;;
;;;; Copyright 2017-2023 Venice
;;;;
;;;; Licensed under the Apache License, Version 2.0 (the "License");
;;;; you may not use this file except in compliance with the License.
;;;; You may obtain a copy of the License at
;;;;
;;;;     http://www.apache.org/licenses/LICENSE-2.0
;;;;
;;;; Unless required by applicable law or agreed to in writing, software
;;;; distributed under the License is distributed on an "AS IS" BASIS,
;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;;;; See the License for the specific language governing permissions and
;;;; limitations under the License.

;;;; DOCKER unit test


(do
  (load-module :docker)
  (load-module :test)

  (ns docker-test)


  (test/deftest test-version []
    (docker/debug :on-no-exec)

    (assert-eq "docker version"
               (clean (with-out-str (docker/version))))

    (assert-eq "docker version -f json"
               (clean (with-out-str (docker/version :version :client))))

    (assert-eq "docker version -f json"
               (clean (with-out-str (docker/version :format :json))))

    (assert-eq "docker version"
               (clean (with-out-str (docker/version :format :string)))))


  (test/deftest test-images []
    (docker/debug :on-no-exec)

    (assert-eq "docker images --format json"
               (clean (with-out-str (docker/images))))

    (assert-eq "docker images --quiet --no-trunc --format json"
               (clean (with-out-str (docker/images :all true, :quiet true, :no-trunc true))))

    (assert-eq "docker images --quiet --no-trunc --format json"
               (clean (with-out-str (docker/images :all true, :quiet true, :no-trunc true, :format :json))))

    (assert-eq "docker images --quiet --no-trunc --format table"
               (clean (with-out-str (docker/images :all true, :quiet true, :no-trunc true, :format :table)))))


  (test/deftest test-containers []
    (docker/debug :on-no-exec)

    (assert-eq "docker run --detach --publish 8529:8529 --name myapp arangodb/arangodb:3.10.10"
                (clean (with-out-str (docker/run "arangodb/arangodb:3.10.10"
                                                  :name "myapp"
                                                  :publish "8529:8529"
                                                  :detach true))))

    (assert-eq "docker run --detach --publish 8529:8529 --name myapp arangodb/arangodb:3.10.10"
                (clean (with-out-str (docker/run "arangodb/arangodb:3.10.10"
                                                  :name "myapp"
                                                  :publish "8529:8529"
                                                  :detach true
                                                  :envs []
                                                  :volumes []
                                                  :args []))))

    (assert-eq "docker run --detach --publish 8529:8529 --name myapp arangodb/arangodb:3.10.10 --database.auto-upgrade"
                (clean (with-out-str (docker/run "arangodb/arangodb:3.10.10"
                                                  :name "myapp"
                                                  :publish "8529:8529"
                                                  :detach true
                                                  :envs []
                                                  :volumes []
                                                  :args ["--database.auto-upgrade"]))))

    (assert-eq "docker run --detach --publish 8529:8529 --name myapp --env E1=xx arangodb/arangodb:3.10.10 --database.auto-upgrade"
                (clean (with-out-str (docker/run "arangodb/arangodb:3.10.10"
                                                  :name "myapp"
                                                  :publish "8529:8529"
                                                  :detach true
                                                  :envs ["E1=xx"]
                                                  :volumes []
                                                  :args ["--database.auto-upgrade"]))))

    (assert-eq "docker run --detach --publish 8529:8529 --name myapp --env E1=xx --env E2=yy arangodb/arangodb:3.10.10 --database.auto-upgrade"
                (clean (with-out-str (docker/run "arangodb/arangodb:3.10.10"
                                                  :name "myapp"
                                                  :publish "8529:8529"
                                                  :detach true
                                                  :envs ["E1=xx" "E2=yy"]
                                                  :volumes []
                                                  :args ["--database.auto-upgrade"]))))

    (assert-eq "docker run --detach --publish 8529:8529 --name myapp --volume vol-1:/var/1 --env E1=xx --env E2=yy arangodb/arangodb:3.10.10 --database.auto-upgrade"
                (clean (with-out-str (docker/run "arangodb/arangodb:3.10.10"
                                                  :name "myapp"
                                                  :publish "8529:8529"
                                                  :detach true
                                                  :envs ["E1=xx" "E2=yy"]
                                                  :volumes ["vol-1:/var/1"]
                                                  :args ["--database.auto-upgrade"]))))

    (assert-eq "docker run --detach --publish 8529:8529 --name myapp --volume vol-1:/var/1 --volume vol-2:/var/2 --env E1=xx --env E2=yy arangodb/arangodb:3.10.10 --database.auto-upgrade"
                (clean (with-out-str (docker/run "arangodb/arangodb:3.10.10"
                                                  :name "myapp"
                                                  :publish "8529:8529"
                                                  :detach true
                                                  :envs ["E1=xx" "E2=yy"]
                                                  :volumes ["vol-1:/var/1" "vol-2:/var/2"]
                                                  :args ["--database.auto-upgrade"]))))

  )


  (defn clean [s]
    (-> (str/split-lines s)
        (last)
        (str/trim)
        (str/replace-first "DEBUG: " "")))

  ;; run tests
  (test/run-tests 'docker-test))
